{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "b0191fa5-d586-4cc2-9bc6-ec63b4a597d5",
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -240,
        1760
      ],
      "id": "c657ec96-3f98-43d9-ab09-6b60764c19cd",
      "name": "Webhook",
      "webhookId": "b0191fa5-d586-4cc2-9bc6-ec63b4a597d5"
    },
    {
      "parameters": {
        "content": "## MIDDLE MUDDLE\n\n Audio Processing (for Google Drive Input):\n\nGoogle Drive (download_file): If the workflow is triggered by an audio file in Google Drive, this node securely downloads the audio content, making it accessible for subsequent processing.\nOpenAI (Transcribe recording): The downloaded audio file is then sent to OpenAI's powerful transcription service (e.g., Whisper model). This node accurately converts the spoken words from the meeting audio into a written transcript.\n3. Core Information Extraction:\n\nHTTP Request3 (Summarizer): The complete meeting transcript (whether from OpenAI or directly from a Webhook) is sent to an external summarization service via an HTTP POST request (to https://loggerwalkkartix...). This service processes the raw transcript and returns a concise summary of the meeting's key points, decisions, and main topics. This summarized content is crucial for the subsequent AI processing.\n4. The Intelligent AI Agent (Core Logic):\n\nAI Agent (Chat Mode): This is the central brain of the workflow. It receives the meeting summary from the previous step and is configured with an Azure OpenAI Chat Model for its intelligence. It uses Simple Memory to maintain context throughout its operations. Crucially, it's equipped with specific Tools:\nGoogle Calendar: To create or update events.\nGoogle Docs1: To create or update documents.\nThe AI Agent's Responsibilities: Based on the meeting summary, the agent's pre-configured prompt guides it to perform several critical tasks:\nIdentify Action Items: It intelligently sifts through the summary to pinpoint specific tasks, deliverables, or follow-ups.\nAssign Tasks: It tries to identify which participants are responsible for each action item, creating personalized to-do lists.\nDetect Deadlines/Events: If dates or timeframes for follow-ups or tasks are mentioned, the agent identifies them.\nPrepare Output: It structures the meeting summary, the personalized to-do lists, and any calendar event details into a format suitable for the next steps.",
        "height": 880,
        "width": 900,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1640,
        1120
      ],
      "typeVersion": 1,
      "id": "58bedb4b-677a-4367-ab46-ec03ab69e5a7",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://aggarwalkkartik-5896-resource.cognitiveservices.azure.com/openai/deployments/gpt-4o/chat/completions?api-version=2025-01-01-preview",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api-key",
              "value": "6gD46p14JytVoF9F6uQuFt0CRLhROs18ee05Q6pmCKKQzAhsEuUHJQQJ99BFACHYHv6XJ3w3AAAAACOGWITB"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "model",
              "value": "gpt-4o"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "messages",
              "value": "={{ [\n  { \"role\": \"system\", \"content\": \"You are an AI that summarizes meeting transcripts and extracts personalized to-do lists for each participant. Format all outputs as bullet points.\" },\n  { \"role\": \"user\", \"content\": String($json.text) }\n] }}"
            },
            {
              "name": "temperature",
              "value": "={{0.3}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        140,
        1540
      ],
      "id": "ce1b0846-19f5-4e0a-b506-b8c533f08582",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.choices[0].message.content }}",
        "options": {
          "systemMessage": "Smart Assistant Responsibilities\nReceive a list of meeting notes or to-dos.\nExtract clear, individual tasks for each person.\nFor each task:\nâœ… Schedule a separate meeting in Google Calendar.\nðŸ“Œ Return a clean, bullet-point summary of:\nKey tasks\nAssigned responsibilities\n(No extra commentary)\nðŸ“¤ Push the summary into:\nA Notion document or\nA Google Doc"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        460,
        1540
      ],
      "id": "49746e1a-d880-4283-b04b-76e03db336a0",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        360,
        1760
      ],
      "id": "d9a7b480-95fc-4103-af22-d22b29b0b629",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "I1z4zYNqeeRx9VSn",
          "name": "Azure Open AI account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        480,
        1760
      ],
      "id": "19c21ffb-ba00-48b4-91a9-62ee796d9f63",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aggarwalkkartik@gmail.com",
          "mode": "list",
          "cachedResultName": "aggarwalkkartik@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        600,
        1760
      ],
      "id": "b5095913-3de7-4c3f-84d1-cf0976a1354d",
      "name": "Google Calendar1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "FlJ8kOzEms9q7g32",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f5523004-312a-4670-923a-ca990b67c188",
        "options": {
          "binaryPropertyName": "audio"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -320,
        1580
      ],
      "id": "a21306e8-0081-4a4d-b55c-b99dbefe2c74",
      "name": "Webhook1",
      "webhookId": "f5523004-312a-4670-923a-ca990b67c188"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -80,
        1440
      ],
      "id": "6f0b5bdd-ec05-4fef-b0f8-d9e9e1c3d942",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "oRMvPupQLmLuPdRW",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1P5dNytVuJUB-XGWuJHOOS9W4cK--01Tj",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1P5dNytVuJUB-XGWuJHOOS9W4cK--01Tj"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -520,
        1340
      ],
      "id": "5b889e57-8ef0-492b-8607-6d24b4a53be8",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hC54FKgAumX4678M",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {
          "binaryPropertyName": "data",
          "fileName": "={{ $json.originalFilename }}"
        }
      },
      "id": "4d07eba6-4db8-4428-bdf0-3086355cf912",
      "name": "Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        -300,
        1340
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hC54FKgAumX4678M",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=u are a very good sentiment analyser your role is to analyse the input and access it and give your analysis  {{ $json.output }} and also push the analysis into the google doc"
            }
          ]
        },
        "options": {
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        920,
        1540
      ],
      "id": "3e8a70ad-5225-46d7-b7d6-a9b41fdf2725",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "oj7go9dI4urZClWo",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "https://docs.google.com/document/d/13xOiHaXLnWEJdyP2Npejq2Rtje0Tftx6UGIqisykRGA/edit?usp=share_link",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('actionFields0_Text', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        720,
        1760
      ],
      "id": "668fa977-9ebd-4daf-9882-6ccceec9d556",
      "name": "Google Docs1",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "kjNDbtfhiECZKpbQ",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "https://docs.google.com/document/d/1vqhuMH73suh3VdEX-iUcYerilUjoKSTCJp4v0LRhrRg/edit?usp=share_link",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('actionFields0_Text', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        1008,
        1760
      ],
      "id": "527a6365-3717-40e2-8d0a-b10e30603c95",
      "name": "Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "kjNDbtfhiECZKpbQ",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "content": "## STORY OF THREE TRIGGERS\n\nThe workflow begins with one of three potential triggers, allowing flexibility for different input types:\n\nGoogle Drive Trigger (fileCreated): This is the primary trigger for audio-based meetings. When a new audio recording (e.g., MP3, WAV) is uploaded to a specified Google Drive folder, the workflow automatically initiates.\nWebhook1 & Webhook: These serve as alternative triggers. They are designed to receive pre-transcribed text directly (e.g., from a third-party meeting platform's text export) or potentially even raw audio data if configured for direct upload via cURL. This provides options for scenarios where Google Drive isn't the preferred initial input method for already transcribed content.\n\n",
        "height": 880,
        "width": 560
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2000,
        1080
      ],
      "typeVersion": 1,
      "id": "51331de1-20fc-4f58-b164-a740a3192d36",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## FINAL EMOTION\n\nDocumentation and Follow-Up Integration:\n\nOpenAI (Message Model - Sentiment Analysis): After the AI Agent has extracted and structured the core information, the meeting summary (or potentially the full transcript for richer analysis) is sent to another OpenAI model for sentiment analysis. This step evaluates the overall emotional tone of the meeting (e.g., positive, negative, neutral), providing an additional layer of insight.\nGoogle Docs (update: document): This final node integrates all the generated output into a Google Doc. It receives the comprehensive summary, the personalized to-do lists from the AI Agent, and the sentiment analysis results. It then updates a specified Google Doc (either creating a new one or appending to an existing template) to create a comprehensive, organized meeting record.\nGoogle Calendar (via AI Agent): Any identified deadlines or follow-up events are automatically created in Google Calendar by the AI Agent using its integrated tool, ensuring participants receive timely reminders.\n\n\n\n",
        "height": 880,
        "width": 520
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1240,
        1120
      ],
      "typeVersion": 1,
      "id": "7413909a-bcb8-41b6-bdf7-ae2471217496",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Docs1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Docs": {
      "ai_tool": [
        [
          {
            "node": "OpenAI1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "df773cf0-b5a9-4611-9e41-e64839d67555",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "950ce451a4eb758732f0536172ff751f694a146ee3570184ec8a39df1f5c4d40"
  },
  "id": "qGiqg3ekFzJz2cFc",
  "tags": []
}